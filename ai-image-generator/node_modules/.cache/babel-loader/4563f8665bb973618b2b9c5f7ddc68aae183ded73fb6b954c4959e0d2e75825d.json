{"ast":null,"code":"var _jsxFileName = \"/Users/manoj/Documents/React-small-projects/ai-image-generator/ai-image/src/components/ImageGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './ImageGenerator.css';\nimport default_image from '../assets/default_image.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGenerator = () => {\n  _s();\n  const [image_url, setImage_url] = useState('/');\n  let inputRef = useRef(null);\n  const imageGenerator = async () => {\n    if (inputRef.current.value === \"\") {\n      return 0;\n    }\n    const response = await fetch(\"https://api.openai.com/v1/images/generations\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer sk-Z1q1V6oEu5GOkjp4tu2rEpwxDgCzAhX9BCSSckTgibT3BlbkFJ3Cs2T52evu6aik3HkiopvQJMEirMUpWcVCeGHBY_MA\",\n        \"User_Agent\": \"Chrome\"\n      },\n      body: JSON.stringify({\n        prompt: `${inputRef.current.value}`,\n        n: 1,\n        size: \"512x512\"\n      })\n    });\n    let data = await response.json();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-image-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [\"Ai Image\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image_url === \"/\" ? default_image : image_url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Describe What you what to See\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generator-btn\",\n        onClick: () => {\n          imageGenerator();\n        },\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 4\n  }, this);\n};\n_s(ImageGenerator, \"I+U0NvhE892DXd/hN1bCYeDaElE=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["React","useState","useRef","default_image","jsxDEV","_jsxDEV","ImageGenerator","_s","image_url","setImage_url","inputRef","imageGenerator","current","value","response","fetch","method","headers","Authorization","body","JSON","stringify","prompt","n","size","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/manoj/Documents/React-small-projects/ai-image-generator/ai-image/src/components/ImageGenerator.jsx"],"sourcesContent":["import React, { useState,useRef } from 'react'\nimport './ImageGenerator.css'\nimport default_image from '../assets/default_image.svg'\n\n\nconst ImageGenerator = () => {\n    const[image_url,setImage_url] =useState('/');\n    let inputRef = useRef(null);\n\n    const imageGenerator = async()=> {\n        if(inputRef.current.value ===\"\"){\n            return 0 ;\n        }\n        const response = await fetch(\n            \"https://api.openai.com/v1/images/generations\",\n            {\n                method:\"POST\",\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    Authorization:\n                    \"Bearer sk-Z1q1V6oEu5GOkjp4tu2rEpwxDgCzAhX9BCSSckTgibT3BlbkFJ3Cs2T52evu6aik3HkiopvQJMEirMUpWcVCeGHBY_MA\",\n                    \"User_Agent\" : \"Chrome\",\n                },\n                body:JSON.stringify({\n                    prompt:`${inputRef.current.value}`,\n                    n:1,\n                    size:\"512x512\"\n                }),\n            }\n        );\n        let data = await response.json()\n        \n    }\n \n  return (\n   <div className=\"ai-image-generator\">\n    <div className=\"header\">Ai Image<span>Generator</span></div>\n    <div className=\"img-loading\">\n        <div className=\"image\"><img src={image_url===\"/\"?default_image:image_url} alt=\"\" /></div>\n    </div>\n    <div className=\"search-box\">\n        <input type=\"text\" className=\"search-input\" placeholder='Describe What you what to See' />\n        <div className=\"generator-btn\" onClick={()=>{imageGenerator()}}>Generate</div>\n    </div>\n   </div>\n  )\n}\n\nexport default ImageGenerator\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,MAAM,QAAQ,OAAO;AAC9C,OAAO,sBAAsB;AAC7B,OAAOC,aAAa,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAK,CAACC,SAAS,EAACC,YAAY,CAAC,GAAER,QAAQ,CAAC,GAAG,CAAC;EAC5C,IAAIS,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE3B,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAU;IAC7B,IAAGD,QAAQ,CAACE,OAAO,CAACC,KAAK,KAAI,EAAE,EAAC;MAC5B,OAAO,CAAC;IACZ;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,8CAA8C,EAC9C;MACIC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAC;QACJ,cAAc,EAAC,kBAAkB;QACjCC,aAAa,EACb,wGAAwG;QACxG,YAAY,EAAG;MACnB,CAAC;MACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;QAChBC,MAAM,EAAC,GAAGZ,QAAQ,CAACE,OAAO,CAACC,KAAK,EAAE;QAClCU,CAAC,EAAC,CAAC;QACHC,IAAI,EAAC;MACT,CAAC;IACL,CACJ,CAAC;IACD,IAAIC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;EAEpC,CAAC;EAEH,oBACCrB,OAAA;IAAKsB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAClCvB,OAAA;MAAKsB,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,UAAQ,eAAAvB,OAAA;QAAAuB,QAAA,EAAM;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5D3B,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBvB,OAAA;QAAKsB,SAAS,EAAC,OAAO;QAAAC,QAAA,eAACvB,OAAA;UAAK4B,GAAG,EAAEzB,SAAS,KAAG,GAAG,GAACL,aAAa,GAACK,SAAU;UAAC0B,GAAG,EAAC;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC,eACN3B,OAAA;MAAKsB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBvB,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACR,SAAS,EAAC,cAAc;QAACS,WAAW,EAAC;MAA+B;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1F3B,OAAA;QAAKsB,SAAS,EAAC,eAAe;QAACU,OAAO,EAAEA,CAAA,KAAI;UAAC1B,cAAc,CAAC,CAAC;QAAA,CAAE;QAAAiB,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAET,CAAC;AAAAzB,EAAA,CAzCKD,cAAc;AAAAgC,EAAA,GAAdhC,cAAc;AA2CpB,eAAeA,cAAc;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}