/*
 * Copyright 2024 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { __extends } from "tslib";
import classNames from "classnames";
import * as React from "react";
import { AbstractPureComponent, Classes, Utils } from "../../common";
import {} from "./tab";
import { generateTabIds } from "./tabTitle";
/**
 * Wraps the passed `panel`.
 */
var TabPanel = /** @class */ (function (_super) {
    __extends(TabPanel, _super);
    function TabPanel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TabPanel.prototype.render = function () {
        var _a = this.props, className = _a.className, id = _a.id, parentId = _a.parentId, selectedTabId = _a.selectedTabId, panel = _a.panel, renderActiveTabPanelOnly = _a.renderActiveTabPanelOnly;
        var isSelected = id === selectedTabId;
        if (panel === undefined || (renderActiveTabPanelOnly && !isSelected)) {
            return undefined;
        }
        var _b = generateTabIds(parentId, id), tabTitleId = _b.tabTitleId, tabPanelId = _b.tabPanelId;
        return (React.createElement("div", { "aria-labelledby": tabTitleId, "aria-hidden": !isSelected, className: classNames(Classes.TAB_PANEL, className), id: tabPanelId, role: "tabpanel" }, Utils.isFunction(panel) ? panel({ tabPanelId: tabPanelId, tabTitleId: tabTitleId }) : panel));
    };
    return TabPanel;
}(AbstractPureComponent));
export { TabPanel };
//# sourceMappingURL=tabPanel.js.map