"use strict";
/*
 * Copyright 2025 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormGroup = void 0;
var tslib_1 = require("tslib");
var classnames_1 = tslib_1.__importDefault(require("classnames"));
var React = tslib_1.__importStar(require("react"));
var common_1 = require("../../common");
var props_1 = require("../../common/props");
/**
 * Form group component.
 *
 * @see https://blueprintjs.com/docs/#core/components/form-group
 */
var FormGroup = function (props) {
    var _a;
    var children = props.children, className = props.className, contentClassName = props.contentClassName, disabled = props.disabled, fill = props.fill, helperText = props.helperText, inline = props.inline, intent = props.intent, label = props.label, labelFor = props.labelFor, labelInfo = props.labelInfo, style = props.style, subLabel = props.subLabel, htmlProps = tslib_1.__rest(props, ["children", "className", "contentClassName", "disabled", "fill", "helperText", "inline", "intent", "label", "labelFor", "labelInfo", "style", "subLabel"]);
    var classes = (0, classnames_1.default)(common_1.Classes.FORM_GROUP, common_1.Classes.intentClass(intent), (_a = {},
        _a[common_1.Classes.DISABLED] = disabled,
        _a[common_1.Classes.FILL] = fill,
        _a[common_1.Classes.INLINE] = inline,
        _a), className);
    return (React.createElement("div", tslib_1.__assign({ className: classes, style: style }, htmlProps),
        label && (React.createElement("label", { className: common_1.Classes.LABEL, htmlFor: labelFor },
            label,
            " ",
            React.createElement("span", { className: common_1.Classes.TEXT_MUTED }, labelInfo))),
        subLabel && React.createElement("div", { className: common_1.Classes.FORM_GROUP_SUB_LABEL }, subLabel),
        React.createElement("div", { className: (0, classnames_1.default)(common_1.Classes.FORM_CONTENT, contentClassName) },
            children,
            helperText && React.createElement("div", { className: common_1.Classes.FORM_HELPER_TEXT }, helperText))));
};
exports.FormGroup = FormGroup;
exports.FormGroup.displayName = "".concat(props_1.DISPLAYNAME_PREFIX, ".FormGroup");
//# sourceMappingURL=formGroup.js.map